version: 2.1
 
orbs:
  docker: circleci/docker@2.1.4
 
workflows:
  clean_test_build_&_deploy:
    jobs:
      - build_client
      - build_server:
                  requires:
                    - build_client
      - deploy:
            requires:
               - build_server             
      # - clean 
      # - build_client:
      #             requires:
      #               - clean
      # - build_server:
      #              requires:
      #               - build_client   
      # - deploy:
      #        requires:
      #          - build_server
 

jobs:


#  clean:  # name of job
#   executor: aws-cli/default
#   steps:
#     - checkout
#     - aws-cli/setup:
#         aws-access-key-id: AWS_ACCESS_KEY
#         aws-secret-access-key: AWS_SECRET_KEY
#         aws-region: AWS_REGION_NAME
#     - run:
#        name: "ECR Login"
#        command: aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
#     - run:
#        name: "Delete client image"
#        command: aws ecr batch-delete-image --repository-name $APP_NAME --image-ids imageTag=$IMAGE_TAG_CLIENT
#     - run:
#        name: "Delete server image"
#        command: aws ecr batch-delete-image --repository-name $APP_NAME --image-ids imageTag=$IMAGE_TAG_SERVER 
 
 
#  test:  #name of job
#   docker:
#     - image: cimg/node:18.11.0
#   steps:
#     - checkout
#     - run:
#        name: "Install NPM tool"
#        command: npm install
#     - run:
#        name: "Running Test"  
#        command: npm run test
 
 build_client:  # name of job
  working_directory: ~/deploy/Incaendo_Client
  executor: docker/docker
  steps:
    - checkout:
        path: ~/deploy
    - setup_remote_docker:
        version: 20.10.14 
    - run:
       name: "Building Docker Image"
       command: docker build -t registry-intl.ap-south-1.aliyuncs.com/repo12/data:client1 .
    - run:
       name: "ECR Login"
       command: echo "Rajat@1234" | docker login --username=rajat.singh@kellton.com --password-stdin registry-intl.ap-south-1.aliyuncs.com
    - run:
       name: "Pushing  Image into Amazon Elastic Container"
       command: docker push registry-intl.ap-south-1.aliyuncs.com/repo12/data:client1 
 


 build_server:  # name of job
  working_directory: ~/deploy/Incaendo_Server
  executor: docker/docker
  steps:
    - checkout:
        path: ~/deploy
    - setup_remote_docker:
        version: 20.10.14 
    - run:
       name: "Building Docker Image"
       command: docker build -t registry-intl.ap-south-1.aliyuncs.com/repo12/data:server1 .
    - run:
       name: "ECR Login"
       command: echo "Rajat@1234" | docker login --username=rajat.singh@kellton.com --password-stdin registry-intl.ap-south-1.aliyuncs.com
    - run:
       name: "Pushing  Image into Amazon Elastic Container"
       command: docker push registry-intl.ap-south-1.aliyuncs.com/repo12/data:server1 
 


 deploy:
   machine:
     image: ubuntu-2004:202010-01
   steps:
     - add_ssh_keys:
         fingerprints:
           - "7b:fd:ca:d7:1b:de:4c:4b:29:03:e4:97:ef:40:76:d8"
     - run:
         name: "Deploying the app into AWS EC2"
         command: |
                 ssh -v -o StrictHostKeyChecking=no root@198.11.174.204 "
                 echo "Rajat@1234" | docker login --username=rajat.singh@kellton.com --password-stdin registry-intl.ap-south-1.aliyuncs.com &&                  
                 docker ps -aq | xargs docker stop | xargs docker rm &&
                 docker images -aq | xargs docker image rm &&
                 rm docker-compose.yml && 
                 tee -a docker-compose.yml \<<EOF

                  version: '3'
                  services:
                     frontend:
                        image: registry-intl.ap-south-1.aliyuncs.com/repo12/data:client1
                        ports:
                        - "3000:80"
                     backend:
                        image: registry-intl.ap-south-1.aliyuncs.com/repo12/data:server1
                        ports:
                           - "5000:5000" "
     - run:
         name: "running docker compose in ec2 instance"
         command: ssh -v -o StrictHostKeyChecking=no root@198.11.174.204 "
                  docker-compose up -d "
 
                 


  
 



